<tool id="ip_landmark_registration" name="Landmark Registration" version="0.0.5" profile="20.05">
    <description>estimates the affine transformation matrix or performs piecewise affine transformation</description>
    <requirements>
        <requirement type="package" version="0.18.1">scikit-image</requirement>
        <requirement type="package" version="1.6.2">scipy</requirement>
        <requirement type="package" version="1.2.4">pandas</requirement>
        <requirement type="package" version="1.20.2">numpy</requirement>
    </requirements>
    <command detect_errors="aggressive">
    <![CDATA[ 
        python '$__tool_directory__/landmark_registration.py'
        '$fn_lmkmov'
        '$fn_lmkfix'
        '$fn_out'
        #if $algo_option.algo == 'pwlt':
            --pwlt '$fn_ptsmov'
        #elif $algo_option.algo == 'ransac':
            --res_th '$res_thr'
            --max_ite '$max_iter'
        #end if
    ]]>
    </command>
    <inputs>
        <param name="fn_lmkmov" type="data" format="tabular" label="Coordinates of moving landmarks (tsv file)" />
        <param name="fn_lmkfix" type="data" format="tabular" label="Coordinates of fixed landmarks (tsv file)" />
        <conditional name="algo_option">
            <param name="algo" type="select" label="Select the algorithm">
                <option value="ransac">Affine Transformation (based on RANSAC)</option>
                <option value="ls">Affine Transformation (based on Least Squares)</option>
                <option value="pwlt" selected="True">Piecewise Affine Transformation</option>
            </param>
            <when value="ransac">
                <param argument="--res_thr" type="float" value="2.0" label="Maximum distance for a data point to be classified as an inlier." />
                <param argument="--max_iter" type="integer" value="100" label="Maximum number of iterations for random sample selection." />
            </when>
            <when value="ls"></when>
            <when value="pwlt">
                <param argument="--pwlt" name="fn_ptsmov" type="data" format="tabular" label="Coordinates of points to be transformed (tsv file)" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="tabular" name="fn_out" />
    </outputs>
    <tests>
        <test>
            <param name="fn_lmkmov" value="points_moving.tsv"/>
            <param name="fn_lmkfix" value="points_fixed.tsv"/>
            <conditional name="algo_option">
                <param name="algo" value="ls"/>
            </conditional>
            <output name="fn_out" value="tmat.tsv" ftype="tabular" compare="diff" lines_diff="6"/>
        </test>
        <test>
            <param name="fn_lmkmov" value="points_moving.tsv"/>
            <param name="fn_lmkfix" value="points_fixed.tsv"/>
            <conditional name="algo_option">
                <param name="algo" value="ransac"/>
            </conditional>
            <param name="res_thr" value="2"/>
            <param name="max_iter" value="100"/>
            <output name="fn_out" value="tmat.tsv" ftype="tabular" compare="diff" lines_diff="6"/>
        </test>
        <test>
            <param name="fn_lmkmov" value="lmk_mov.tsv"/>
            <param name="fn_lmkfix" value="lmk_fix.tsv"/>
            <param name="algo_option.algo" value="pwlt"/>
            <param name="fn_ptsmov" value="points.tsv"/>
            <output name="fn_out" value="points_pwlt.tsv" ftype="tabular"/>
        </test>
    </tests>
    <help>
    **What it does**

    1) Estimation of the affine transformation matrix between two sets of 2d points; 
    2) Piecewise affine transformation of points based on landmark pairs.

    About the format of landmark/point coordinates in the input TSV table: Columns with header "x" and "y" are for x- and y-coordinate, respectively.
    </help>
    <citations>
        <citation type="doi">10.1016/j.jbiotec.2017.07.019</citation>
    </citations>
</tool>

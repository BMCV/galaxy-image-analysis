<tool id="ip_color_deconvolution" name="Perform color deconvolution or transformation" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@"> 
    <description></description>
    <macros>
        <import>creators.xml</import>
        <import>tests.xml</import>
        <token name="@TOOL_VERSION@">0.9</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <creator>
        <expand macro="creators/bmcv"/>
    </creator>
    <edam_operations>
        <edam_operation>operation_3443</edam_operation>
    </edam_operations>
    <xrefs>
        <xref type="bio.tools">galaxy_image_analysis</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="0.24.0">scikit-image</requirement>
        <requirement type="package" version="11.0.0">pillow</requirement>
        <requirement type="package" version="1.5.2">scikit-learn</requirement>
        <requirement type="package" version="2.1.2">numpy</requirement>
        <requirement type="package" version="2024.9.20">tifffile</requirement>
    </requirements>
    <command detect_errors="aggressive">
        <![CDATA[ 

        python '$__tool_directory__/color_deconvolution.py'

            '$input'
            '$output'
            '$convtype'

            #if str($isolate_channel) != '':
                --isolate_channel '${isolate_channel}'
            #end if

        ]]>
    </command>
    <inputs>
        <param name="input" type="data" format="tiff,png,jpg,bmp" label="Image file with 3 channels"/>
        <param name="convtype" type="select" label="Transformation type">

            <!-- Color deconvolution and recomposition operations -->
            <option value="he_from_rgb">Deconvolve RGB into Haematoxylin + Eosin</option>
            <option value="rgb_from_he">Recompose RGB from Haematoxylin + Eosin</option>
            <option value="hdx_from_rgb">Deconvolve RGB into Haematoxylin + DAB</option>
            <option value="rgb_from_hdx">Recompose RGB from Haematoxylin + DAB</option>
            <option value="rgb2hed">Deconvolve RGB into Haematoxylin + Eosin + DAB</option>
            <option value="hed2rgb">Recompose RGB from Haematoxylin + Eosin + DAB</option>
            <option value="fgx_from_rgb">Deconvolve RGB into Feulgen + Light Green</option>
            <option value="rgb_from_fgx">Recompose RGB from Feulgen + Light Green</option>

            <!-- Unsupervised machine learning-based operations -->
            <option value="ica">Project onto independent components (ICA)</option>
            <option value="pca">Project onto principal components (PCA)</option>
            <option value="nmf">Non-negative matrix factorization</option>
            <option value="fa">Factor analysis</option>

            <!-- General color space conversion operations -->
            <option value="rgb2hsv" selected="True">Convert RGB to HSV</option>
            <option value="hsv2rgb">Convert HSV to RGB</option>
            <option value="rgb2xyz">Convert RGB to XYZ (CIE 1931)</option>
            <option value="xyz2rgb">Convert XYZ (CIE 1931) to RGB</option>
            <option value="rgb2luv">Convert RGB to CIE-LUV</option>
            <option value="luv2rgb">Convert CIE-LUV to RGB</option>
            <option value="xyz2luv">Convert XYZ (CIE 1931) to CIE-LUV</option>
            <option value="luv2xyz">Convert CIE-LUV to XYZ (CIE 1931)</option>
            <option value="rgb2lab">Convert RGB to CIE-LAB (illuminant D65, aperture angle 2&#xb0;)</option>
            <option value="lab2rgb">Convert CIE-LAB (illuminant D65, aperture angle 2&#xb0;) to RGB</option>
            <option value="lab2xyz">Convert CIE-LAB (illuminant D65, aperture angle 2&#xb0;) to XYZ (CIE 1931)</option>
            <option value="xyz2lab">Convert XYZ (CIE 1931) to CIE-LAB (illuminant D65, aperture angle 2&#xb0;)</option>
            <option value="lch2lab">Convert CIE-LCh to CIE-LAB</option>
            <option value="lab2lch">Convert CIE-LAB to CIE-LCh</option>
            <option value="rgb2rgbcie">Convert RGB to RGB-CIE</option>
            <option value="rgbcie2rgb">Convert RGB-CIE to RGB</option>

            <!-- TODO: sort the operations below -->
            <option value="rgb_from_rbd">rgb_from_rbd</option>
            <option value="rgb_from_bro">rgb_from_bro</option>
            <option value="bpx_from_rgb">bpx_from_rgb</option>
            <option value="hed_from_rgb">hed_from_rgb</option>
            <option value="hpx_from_rgb">hpx_from_rgb</option>
            <option value="rgb_from_gdx">rgb_from_gdx</option>
            <option value="rgb_from_hpx">rgb_from_hpx</option>
            <option value="bex_from_rgb">bex_from_rgb</option>
            <option value="rgb_from_bex">rgb_from_bex</option>
            <option value="rbd_from_rgb">rbd_from_rgb</option>
            <option value="ahx_from_rgb">ahx_from_rgb</option>
            <option value="rgb_from_hax">rgb_from_hax</option>
            <option value="hax_from_rgb">hax_from_rgb</option>
            <option value="rgb_from_bpx">rgb_from_bpx</option>
            <option value="gdx_from_rgb">gdx_from_rgb</option>
            <option value="rgb_from_ahx">rgb_from_ahx</option>
            <option value="rgb_from_hed">rgb_from_hed</option>
            <option value="bro_from_rgb">bro_from_rgb</option>
            <!-- TODO: sort the operations above -->

        </param>
        <param name="isolate_channel" type="integer" optional="true" value="" label="Isolate channel" help="Must be empty or the number of a channel (1 to 3). If used, all other channels are set to zero before performing the chosen transformation." />
    </inputs>
    <outputs>
        <data format="tiff" name="output"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="galaxyIcon_noText.png" />
            <param name="convtype" value="rgb2hsv" />
            <expand macro="tests/intensity_image_diff" name="output" value="galaxyIcon_noText.tiff" ftype="tiff"/>
        </test>
        <test>
            <param name="input" value="he1.tiff" />
            <param name="convtype" value="rgb2hed" />
            <expand macro="tests/intensity_image_diff" name="output" value="he1_deconv_hed.tiff" ftype="tiff"/>
        </test>
        <test>
            <param name="input" value="he1_deconv_hed.tiff" />
            <param name="convtype" value="hed2rgb" />
            <expand macro="tests/intensity_image_diff" name="output" value="he1_deconv_hed_recomposed.tiff" ftype="tiff"/>
        </test>
        <test>
            <param name="input" value="he1_deconv_hed.tiff" />
            <param name="convtype" value="hed2rgb" />
            <param name="isolate_channel" value="1" />
            <expand macro="tests/intensity_image_diff" name="output" value="he1_deconv_hed_recomposed1.tiff" ftype="tiff"/>
        </test>
        <test>
            <param name="input" value="he1.tiff" />
            <param name="convtype" value="he_from_rgb" />
            <expand macro="tests/intensity_image_diff" name="output" value="he1_deconv_he.tiff" ftype="tiff"/>
        </test>
        <test>
            <param name="input" value="hdab1.tiff" />
            <param name="convtype" value="hdx_from_rgb" />
            <expand macro="tests/intensity_image_diff" name="output" value="hdab1_deconv_hdab.tiff" ftype="tiff"/>
        </test>
    </tests>
    <help>

        **This tool converts the color space of an image.**

        Several color deconvolution techniques are also supported.

    </help>
    <citations>
      <citation type="doi">10.7717/peerj.453</citation>
      <citation type="bibtex">@inproceedings{sklearn_api,
            author = {Lars Buitinck and Gilles Louppe and Mathieu Blondel and
                      Fabian Pedregosa and Andreas Mueller and Olivier Grisel and
                      Vlad Niculae and Peter Prettenhofer and Alexandre Gramfort
                      and Jaques Grobler and Robert Layton and Jake VanderPlas and
                      Arnaud Joly and Brian Holt and Ga{\"{e}}l Varoquaux},
            title = {{API} design for machine learning software: experiences from the scikit-learn project},
            booktitle = {ECML PKDD Workshop: Languages for Data Mining and Machine Learning},
            year = {2013},
            pages = {108--122},
        }</citation>
    </citations>
</tool>
